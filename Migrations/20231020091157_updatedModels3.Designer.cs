// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TP2_Entity.Models;

#nullable disable

namespace TP2_Entity.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231020091157_updatedModels3")]
    partial class updatedModels3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TP2_Entity.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("MembershipTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MembershipTypeId")
                        .IsUnique()
                        .HasFilter("[MembershipTypeId] IS NOT NULL");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("TP2_Entity.Models.Genre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GenreName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genre");
                });

            modelBuilder.Entity("TP2_Entity.Models.MembershipType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("DiscountRate")
                        .HasColumnType("float");

                    b.Property<int>("DurationInMonth")
                        .HasColumnType("int");

                    b.Property<bool>("SignUpFree")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("MembershipType");
                });

            modelBuilder.Entity("TP2_Entity.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("GenreId")
                        .HasColumnType("int");

                    b.Property<Guid?>("GenreId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("GenreId1");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("TP2_Entity.Models.Customer", b =>
                {
                    b.HasOne("TP2_Entity.Models.MembershipType", "MembershipType")
                        .WithOne("Customers")
                        .HasForeignKey("TP2_Entity.Models.Customer", "MembershipTypeId");

                    b.Navigation("MembershipType");
                });

            modelBuilder.Entity("TP2_Entity.Models.Movie", b =>
                {
                    b.HasOne("TP2_Entity.Models.Customer", null)
                        .WithMany("Movies")
                        .HasForeignKey("CustomerId");

                    b.HasOne("TP2_Entity.Models.Genre", "Genre")
                        .WithMany("Movies")
                        .HasForeignKey("GenreId1");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("TP2_Entity.Models.Customer", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("TP2_Entity.Models.Genre", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("TP2_Entity.Models.MembershipType", b =>
                {
                    b.Navigation("Customers");
                });
#pragma warning restore 612, 618
        }
    }
}
